{"result": [{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftscasubcallosalarea,leftttgtransversetemporalgyrus,leftioginferioroccipitalgyrus,leftsogsuperioroccipitalgyrus,leftpallidumrs3851179_a,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3851179_a", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3851179_a", "field": "rs3851179_a", "operator": "equal", "value": "1" }, { "id": "rs3851179_a", "field": "rs3851179_a", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,rightttgtransversetemporalgyrus,rightptplanumtemporale,rightacgganteriorcingulategyrus,leftgregyrusrectusrs17125944_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs17125944_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "0" }, { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmtgmiddletemporalgyrus,leftangangulargyrus,leftsogsuperioroccipitalgyrus,fdg,pibrs744373_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs744373_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs744373_c", "field": "rs744373_c", "operator": "equal", "value": "0" }, { "id": "rs744373_c", "field": "rs744373_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,leftpinsposteriorinsula,leftppplanumpolare,rightstgsuperiortemporalgyrus,leftmprgprecentralgyrusmedialsegmentrs17125944_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs17125944_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "1" }, { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmcggmiddlecingulategyrus,rightputamen,leftpcggposteriorcingulategyrus,rightgregyrusrectus,leftventraldcrs744373_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs744373_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs744373_c", "field": "rs744373_c", "operator": "equal", "value": "0" }, { "id": "rs744373_c", "field": "rs744373_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightfugfusiformgyrus,rightcocentraloperculum,rightioginferioroccipitalgyrus,subjectageyearsrs3865444_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3865444_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "0" }, { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmpogpostcentralgyrusmedialsegment,lefthippocampus,rightsplsuperiorparietallobule,leftaorganteriororbitalgyrus,leftamygdalars11767557_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs11767557_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs11767557_c", "field": "rs11767557_c", "operator": "equal", "value": "1" }, { "id": "rs11767557_c", "field": "rs11767557_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftcerebellumexterior,leftfofrontaloperculum,rightpcggposteriorcingulategyrus,rightmfgmiddlefrontalgyrus,opticchiasmparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftporgposteriororbitalgyrus,rightainsanteriorinsula,rightpogpostcentralgyrus,rightocpoccipitalpole,leftmogmiddleoccipitalgyrusrs10498633_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs10498633_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "1" }, { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightitginferiortemporalgyrus,rightofugoccipitalfusiformgyrus,rightphgparahippocampalgyrus,rightppplanumpolare,leftainsanteriorinsulars610932_a,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs610932_a", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "1" }, { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,leftocpoccipitalpole,leftttgtransversetemporalgyrus,leftsplsuperiorparietallobule,rightpinsposteriorinsulaagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightpogpostcentralgyrus,rightitginferiortemporalgyrus,rightventraldc,rightmprgprecentralgyrusmedialsegment,rightmfcmedialfrontalcortexrs1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "1" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,rightaccumbensarea,rightprgprecentralgyrus,leftppplanumpolare,leftcocentraloperculumapoe4,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "apoe4", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "0" }, { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,rightainsanteriorinsula,leftpoparietaloperculum,rightpoparietaloperculum,rightppplanumpolarers190982_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs190982_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs190982_g", "field": "rs190982_g", "operator": "equal", "value": "1" }, { "id": "rs190982_g", "field": "rs190982_g", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,leftmsfgsuperiorfrontalgyrusmedialsegment,leftangangulargyrus,leftputamen,leftsmcsupplementarymotorcortexrs3851179_a,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3851179_a", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3851179_a", "field": "rs3851179_a", "operator": "equal", "value": "0" }, { "id": "rs3851179_a", "field": "rs3851179_a", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmpogpostcentralgyrusmedialsegment,rightsmcsupplementarymotorcortex,rightsmgsupramarginalgyrus,leftententorhinalarea,rightphgparahippocampalgyrusrs3865444_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3865444_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "1" }, { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightttgtransversetemporalgyrus,rightcuncuneus,rightventraldc,leftputamen,rightphgparahippocampalgyrusapoe4,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "apoe4", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "0" }, { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftporgposteriororbitalgyrus,rightptplanumtemporale,rightputamen,leftaorganteriororbitalgyrus,leftmfcmedialfrontalcortexapoe4,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "apoe4", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "0" }, { "id": "apoe4", "field": "apoe4", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,leftmcggmiddlecingulategyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,rightventraldc,rightmsfgsuperiorfrontalgyrusmedialsegmentrs3818361_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3818361_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3818361_t", "field": "rs3818361_t", "operator": "equal", "value": "1" }, { "id": "rs3818361_t", "field": "rs3818361_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftpoparietaloperculum,rightcuncuneus,leftcerebralwhitematter,rightinflatvent,rightcerebellumwhitematterparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftthalamusproper,rightocpoccipitalpole,righttmptemporalpole,opticchiasm,leftfrpfrontalpoleparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightacgganteriorcingulategyrus,rightthalamusproper,leftofugoccipitalfusiformgyrus,rightaorganteriororbitalgyrus,cerebellarvermallobulesviiixedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,righthippocampus,leftthalamusproper,rightitginferiortemporalgyrus,leftputamenrs610932_a,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs610932_a", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "0" }, { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,leftsfgsuperiorfrontalgyrus,leftporgposteriororbitalgyrus,leftputamen,leftsogsuperioroccipitalgyrusgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightententorhinalarea,leftthalamusproper,righttmptemporalpole,rightsogsuperioroccipitalgyrusrs10498633_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs10498633_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "0" }, { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightsfgsuperiorfrontalgyrus,leftliglingualgyrus,rightsmcsupplementarymotorcortex,rightsmgsupramarginalgyrus,leftthalamusproper,rightmcggmiddlecingulategyrus,rightsogsuperioroccipitalgyrus,leftmfcmedialfrontalcortex,cerebellarvermallobulesviiix,csfglobalagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "av45,leftacgganteriorcingulategyrus,leftocpoccipitalpole,rightsmcsupplementarymotorcortex,rightcalccalcarinecortex,leftmpogpostcentralgyrusmedialsegment,rightmprgprecentralgyrusmedialsegment,rightpallidum,leftitginferiortemporalgyrus,leftstgsuperiortemporalgyrusrs10498633_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs10498633_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "1" }, { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,leftliglingualgyrus,leftthalamusproper,cerebellarvermallobulesvivii,leftententorhinalarea,rightputamen,righttrifgtriangularpartoftheinferiorfrontalgyrus,rightamygdala,leftopifgopercularpartoftheinferiorfrontalgyrus,leftpcuprecuneusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightsmgsupramarginalgyrus,leftmcggmiddlecingulategyrus,rightainsanteriorinsula,rightcalccalcarinecortex,rightitginferiortemporalgyrus,leftpoparietaloperculum,brainstem,rightsplsuperiorparietallobule,leftofugoccipitalfusiformgyrus,leftsmcsupplementarymotorcortexedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightsmcsupplementarymotorcortex,leftmtgmiddletemporalgyrus,leftorifgorbitalpartoftheinferiorfrontalgyrus,rightacgganteriorcingulategyrus,leftententorhinalarea,leftmogmiddleoccipitalgyrus,rightangangulargyrus,leftpcuprecuneus,leftfrpfrontalpole,rightpinsposteriorinsulars10498633_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs10498633_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "1" }, { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmcggmiddlecingulategyrus,rightainsanteriorinsula,leftioginferioroccipitalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,leftmogmiddleoccipitalgyrus,rightmfcmedialfrontalcortex,leftofugoccipitalfusiformgyrus,rightmtgmiddletemporalgyrus,leftventraldc,leftsmgsupramarginalgyrusrs1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "1" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftcuncuneus,leftocpoccipitalpole,rightmcggmiddlecingulategyrus,rightitginferiortemporalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,_3rdventricle,righttmptemporalpole,leftpcuprecuneus,rightlorglateralorbitalgyrus,subjectageyearsgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "av45,rightfofrontaloperculum,rightptplanumtemporale,leftmtgmiddletemporalgyrus,leftpoparietaloperculum,leftsogsuperioroccipitalgyrus,leftententorhinalarea,righttrifgtriangularpartoftheinferiorfrontalgyrus,rightamygdala,leftpcuprecuneusrs610932_a,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs610932_a", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "1" }, { "id": "rs610932_a", "field": "rs610932_a", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftliglingualgyrus,leftsogsuperioroccipitalgyrus,rightprgprecentralgyrus,rightliglingualgyrus,rightphgparahippocampalgyrus,rightinflatvent,rightmfgmiddlefrontalgyrus,rightmsfgsuperiorfrontalgyrusmedialsegment,subjectageyears,leftfrpfrontalpolegender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,rightttgtransversetemporalgyrus,rightmogmiddleoccipitalgyrus,rightsplsuperiorparietallobule,rightcocentraloperculum,rightputamen,rightmprgprecentralgyrusmedialsegment,pib,rightpcuprecuneus,leftfugfusiformgyrusrs10498633_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs10498633_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "0" }, { "id": "rs10498633_t", "field": "rs10498633_t", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftacgganteriorcingulategyrus,leftpoparietaloperculum,rightopifgopercularpartoftheinferiorfrontalgyrus,leftcaudate,leftcocentraloperculum,rightmfgmiddlefrontalgyrus,rightgregyrusrectus,rightlorglateralorbitalgyrus,leftmprgprecentralgyrusmedialsegment,leftfugfusiformgyrusgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,lefthippocampus,leftioginferioroccipitalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,leftlorglateralorbitalgyrus,leftaorganteriororbitalgyrus,rightmprgprecentralgyrusmedialsegment,leftmfcmedialfrontalcortex,rightioginferioroccipitalgyrus,rightpcuprecuneusgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,rightttgtransversetemporalgyrus,leftsogsuperioroccipitalgyrus,leftmogmiddleoccipitalgyrus,leftinflatvent,leftcalccalcarinecortex,rightaorganteriororbitalgyrus,rightcerebellumwhitematter,subjectageyears,leftfrpfrontalpoleedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftprgprecentralgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightitginferiortemporalgyrus,leftpoparietaloperculum,leftententorhinalarea,rightmprgprecentralgyrusmedialsegment,rightpcggposteriorcingulategyrus,leftopifgopercularpartoftheinferiorfrontalgyrus,leftsmgsupramarginalgyrus,cerebellarvermallobulesivgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,av45,leftpogpostcentralgyrus,leftmcggmiddlecingulategyrus,leftangangulargyrus,leftpoparietaloperculum,leftmpogpostcentralgyrusmedialsegment,rightliglingualgyrus,leftlorglateralorbitalgyrus,fdgrs1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "0" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftcuncuneus,rightmorgmedialorbitalgyrus,righthippocampus,leftcerebellumwhitematter,rightcalccalcarinecortex,leftmfgmiddlefrontalgyrus,leftlateralventricle,rightlorglateralorbitalgyrus,leftmprgprecentralgyrusmedialsegment,leftfugfusiformgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "+80y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightsfgsuperiorfrontalgyrus,leftporgposteriororbitalgyrus,_4thventricle,rightsmgsupramarginalgyrus,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftlorglateralorbitalgyrus,leftpcuprecuneus,rightmfgmiddlefrontalgyrus,cerebellarvermallobulesiv,rightpcuprecuneusparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmtgmiddletemporalgyrus,rightventraldc,rightmfcmedialfrontalcortex,leftcocentraloperculum,montrealcognitiveassessment,rightioginferioroccipitalgyrus,rightaorganteriororbitalgyrus,leftsmgsupramarginalgyrus,leftmprgprecentralgyrusmedialsegment,rightpcuprecuneusrs1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "1" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,rightaccumbensarea,leftfofrontaloperculum,rightsogsuperioroccipitalgyrus,leftaccumbensarea,leftmogmiddleoccipitalgyrus,leftpallidum,leftopifgopercularpartoftheinferiorfrontalgyrus,leftgregyrusrectus,leftfrpfrontalpolers1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "0" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmpogpostcentralgyrusmedialsegment,leftttgtransversetemporalgyrus,rightsmcsupplementarymotorcortex,rightptplanumtemporale,rightcuncuneus,rightopifgopercularpartoftheinferiorfrontalgyrus,rightsplsuperiorparietallobule,rightcocentraloperculum,leftsmgsupramarginalgyrus,leftmprgprecentralgyrusmedialsegmentrs2718058_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs2718058_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "0" }, { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmsfgsuperiorfrontalgyrusmedialsegment,rightpogpostcentralgyrus,leftpoparietaloperculum,rightacgganteriorcingulategyrus,rightliglingualgyrus,leftmogmiddleoccipitalgyrus,rightpallidum,rightstgsuperiortemporalgyrus,leftfrpfrontalpole,leftfugfusiformgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "+80y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftacgganteriorcingulategyrus,leftscasubcallosalarea,lefttrifgtriangularpartoftheinferiorfrontalgyrus,lefthippocampus,leftputamen,leftbasalforebrain,leftpcuprecuneus,leftcalccalcarinecortex,rightstgsuperiortemporalgyrus,rightcerebralwhitematterparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftprgprecentralgyrus,rightfrpfrontalpole,leftpogpostcentralgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,leftententorhinalarea,rightppplanumpolare,pib,leftcalccalcarinecortex,leftmprgprecentralgyrusmedialsegment,rightpcuprecuneusrs3818361_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3818361_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3818361_t", "field": "rs3818361_t", "operator": "equal", "value": "0" }, { "id": "rs3818361_t", "field": "rs3818361_t", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,leftacgganteriorcingulategyrus,rightptplanumtemporale,rightmcggmiddlecingulategyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,leftaccumbensarea,leftcaudate,rightmtgmiddletemporalgyrus,leftitginferiortemporalgyrus,leftstgsuperiortemporalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,leftacgganteriorcingulategyrus,leftocpoccipitalpole,leftmcggmiddlecingulategyrus,rightmcggmiddlecingulategyrus,leftpinsposteriorinsula,minimentalstate,leftgregyrusrectus,leftpcuprecuneus,leftsplsuperiorparietallobulers3764650_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3764650_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3764650_g", "field": "rs3764650_g", "operator": "equal", "value": "0" }, { "id": "rs3764650_g", "field": "rs3764650_g", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftocpoccipitalpole,leftmsfgsuperiorfrontalgyrusmedialsegment,leftpinsposteriorinsula,rightitginferiortemporalgyrus,rightpoparietaloperculum,rightofugoccipitalfusiformgyrus,rightventraldc,_3rdventricle,rightppplanumpolare,rightpallidum,leftsmcsupplementarymotorcortex,leftgregyrusrectus,leftsplsuperiorparietallobule,rightaorganteriororbitalgyrus,cerebellarvermallobulesviiixedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,leftscasubcallosalarea,leftfofrontaloperculum,leftmsfgsuperiorfrontalgyrusmedialsegment,leftangangulargyrus,rightitginferiortemporalgyrus,rightpoparietaloperculum,leftmfgmiddlefrontalgyrus,rightprgprecentralgyrus,rightmprgprecentralgyrusmedialsegment,leftppplanumpolare,rightthalamusproper,rightpallidum,leftopifgopercularpartoftheinferiorfrontalgyrus,rightgregyrusrectusrs190982_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs190982_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs190982_g", "field": "rs190982_g", "operator": "equal", "value": "1" }, { "id": "rs190982_g", "field": "rs190982_g", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftscasubcallosalarea,leftttgtransversetemporalgyrus,leftpogpostcentralgyrus,leftliglingualgyrus,rightsmcsupplementarymotorcortex,leftfofrontaloperculum,rightpoparietaloperculum,leftmfgmiddlefrontalgyrus,rightfugfusiformgyrus,rightphgparahippocampalgyrus,leftbasalforebrain,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftgregyrusrectus,leftstgsuperiortemporalgyrus,rightcerebralwhitemattergender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmorgmedialorbitalgyrus,leftsfgsuperiorfrontalgyrus,leftocpoccipitalpole,leftttgtransversetemporalgyrus,rightmcggmiddlecingulategyrus,righttmptemporalpole,rightpcggposteriorcingulategyrus,righttrifgtriangularpartoftheinferiorfrontalgyrus,fdg,leftcaudate,leftmfcmedialfrontalcortex,leftopifgopercularpartoftheinferiorfrontalgyrus,leftainsanteriorinsula,rightlorglateralorbitalgyrus,leftsmgsupramarginalgyrusmontrealcognitiveassessment,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "montrealcognitiveassessment", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "montrealcognitiveassessment", "field": "montrealcognitiveassessment", "operator": "equal", "value": "6" }, { "id": "montrealcognitiveassessment", "field": "montrealcognitiveassessment", "operator": "equal", "value": "16" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,rightlateralventricle,leftthalamusproper,rightacgganteriorcingulategyrus,_3rdventricle,leftaccumbensarea,rightputamen,leftofugoccipitalfusiformgyrus,subjectage,leftcocentraloperculum,leftsplsuperiorparietallobule,leftpcggposteriorcingulategyrus,rightioginferioroccipitalgyrus,rightaorganteriororbitalgyrus,rightporgposteriororbitalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfofrontaloperculum,rightmpogpostcentralgyrusmedialsegment,_4thventricle,rightsmgsupramarginalgyrus,cerebellarvermallobulesvivii,rightpogpostcentralgyrus,rightofugoccipitalfusiformgyrus,brainstem,leftbasalforebrain,rightpallidum,leftinflatvent,rightmsfgsuperiorfrontalgyrusmedialsegment,rightgregyrusrectus,leftventraldc,rightcerebellumwhitematteragegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightttgtransversetemporalgyrus,leftporgposteriororbitalgyrus,leftttgtransversetemporalgyrus,_4thventricle,lefttrifgtriangularpartoftheinferiorfrontalgyrus,leftcerebellumwhitematter,rightcalccalcarinecortex,leftpoparietaloperculum,rightopifgopercularpartoftheinferiorfrontalgyrus,rightmogmiddleoccipitalgyrus,rightliglingualgyrus,leftcerebralwhitematter,leftgregyrusrectus,subjectageyears,leftmprgprecentralgyrusmedialsegmentalzheimerbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "alzheimerbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "AD" }, { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfofrontaloperculum,rightsfgsuperiorfrontalgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightententorhinalarea,leftangangulargyrus,rightocpoccipitalpole,leftmfgmiddlefrontalgyrus,rightsogsuperioroccipitalgyrus,rightangangulargyrus,righttrifgtriangularpartoftheinferiorfrontalgyrus,rightpallidum,rightmfgmiddlefrontalgyrus,leftfrpfrontalpole,leftmprgprecentralgyrusmedialsegment,rightpcuprecuneusrs2718058_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs2718058_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "0" }, { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftprgprecentralgyrus,rightsfgsuperiorfrontalgyrus,leftpogpostcentralgyrus,leftthalamusproper,rightpoparietaloperculum,rightscasubcallosalarea,rightputamen,rightppplanumpolare,leftsplsuperiorparietallobule,rightmfgmiddlefrontalgyrus,cerebellarvermallobulesviiix,rightstgsuperiortemporalgyrus,rightpcuprecuneus,leftfugfusiformgyrus,rightporgposteriororbitalgyrusalzheimerbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "alzheimerbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "AD" }, { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmorgmedialorbitalgyrus,leftprgprecentralgyrus,cerebellarvermallobulesvivii,rightcalccalcarinecortex,leftmfgmiddlefrontalgyrus,righttmptemporalpole,rightputamen,leftppplanumpolare,rightpcggposteriorcingulategyrus,rightpallidum,leftpcuprecuneus,leftpcggposteriorcingulategyrus,rightmfgmiddlefrontalgyrus,rightgregyrusrectus,rightcerebralwhitematterparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,leftpogpostcentralgyrus,leftorifgorbitalpartoftheinferiorfrontalgyrus,rightcuncuneus,righttmptemporalpole,rightppplanumpolare,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftpcuprecuneus,rightmfgmiddlefrontalgyrus,leftcalccalcarinecortex,leftitginferiortemporalgyrus,rightmsfgsuperiorfrontalgyrusmedialsegment,rightlorglateralorbitalgyrus,leftmprgprecentralgyrusmedialsegment,rightcerebralwhitematterparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,rightmorgmedialorbitalgyrus,rightfofrontaloperculum,leftacgganteriorcingulategyrus,leftocpoccipitalpole,leftttgtransversetemporalgyrus,leftfofrontaloperculum,leftangangulargyrus,rightacgganteriorcingulategyrus,leftphgparahippocampalgyrus,leftsogsuperioroccipitalgyrus,rightscasubcallosalarea,leftmfcmedialfrontalcortex,leftpcggposteriorcingulategyrus,leftsmgsupramarginalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "+80y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,lefttmptemporalpole,leftacgganteriorcingulategyrus,rightmpogpostcentralgyrusmedialsegment,leftocpoccipitalpole,leftpinsposteriorinsula,rightorifgorbitalpartoftheinferiorfrontalgyrus,rightventraldc,rightsplsuperiorparietallobule,leftmogmiddleoccipitalgyrus,rightmprgprecentralgyrusmedialsegment,leftppplanumpolare,leftcocentraloperculum,leftinflatvent,leftstgsuperiortemporalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,leftmorgmedialorbitalgyrus,rightainsanteriorinsula,rightmcggmiddlecingulategyrus,leftorifgorbitalpartoftheinferiorfrontalgyrus,leftioginferioroccipitalgyrus,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftmogmiddleoccipitalgyrus,rightmprgprecentralgyrusmedialsegment,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftcaudate,leftmfcmedialfrontalcortex,leftopifgopercularpartoftheinferiorfrontalgyrus,minimentalstate,rightcaudaters11767557_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs11767557_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs11767557_c", "field": "rs11767557_c", "operator": "equal", "value": "0" }, { "id": "rs11767557_c", "field": "rs11767557_c", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftacgganteriorcingulategyrus,rightsmcsupplementarymotorcortex,rightententorhinalarea,leftfofrontaloperculum,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftphgparahippocampalgyrus,leftputamen,brainstem,rightsplsuperiorparietallobule,rightpcggposteriorcingulategyrus,rightthalamusproper,leftcerebralwhitematter,subjectage,leftitginferiortemporalgyrus,leftlateralventricleedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftscasubcallosalarea,_4thventricle,rightententorhinalarea,leftthalamusproper,rightcalccalcarinecortex,leftphgparahippocampalgyrus,_3rdventricle,leftaccumbensarea,leftmogmiddleoccipitalgyrus,leftbasalforebrain,leftsmcsupplementarymotorcortex,rightmfgmiddlefrontalgyrus,leftfrpfrontalpole,cerebellarvermallobulesiv,rightpcuprecuneusgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,rightententorhinalarea,rightpogpostcentralgyrus,leftangangulargyrus,leftpoparietaloperculum,brainstem,rightphgparahippocampalgyrus,rightcocentraloperculum,subjectage,leftgregyrusrectus,rightioginferioroccipitalgyrus,rightmsfgsuperiorfrontalgyrusmedialsegment,cerebellarvermallobulesviiix,rightcerebellumwhitematter,rightcerebralwhitematteragegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,rightpogpostcentralgyrus,leftpinsposteriorinsula,rightocpoccipitalpole,leftioginferioroccipitalgyrus,leftmfgmiddlefrontalgyrus,leftmpogpostcentralgyrusmedialsegment,rightphgparahippocampalgyrus,rightpcggposteriorcingulategyrus,rightpallidum,leftsmcsupplementarymotorcortex,leftsplsuperiorparietallobule,cerebellarvermallobulesviiix,csfglobal,leftsmgsupramarginalgyrusppmicategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "ppmicategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "ppmicategory", "field": "ppmicategory", "operator": "equal", "value": "HC" }, { "id": "ppmicategory", "field": "ppmicategory", "operator": "equal", "value": "PRODROMA" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,rightfrpfrontalpole,lefttmptemporalpole,righthippocampus,leftliglingualgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,leftmcggmiddlecingulategyrus,leftphgparahippocampalgyrus,rightventraldc,rightscasubcallosalarea,rightliglingualgyrus,rightcocentraloperculum,rightmprgprecentralgyrusmedialsegment,leftmfcmedialfrontalcortex,leftpcggposteriorcingulategyrusrs11136000_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs11136000_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs11136000_t", "field": "rs11136000_t", "operator": "equal", "value": "0" }, { "id": "rs11136000_t", "field": "rs11136000_t", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,rightmpogpostcentralgyrusmedialsegment,leftscasubcallosalarea,leftporgposteriororbitalgyrus,rightsmcsupplementarymotorcortex,rightptplanumtemporale,rightpogpostcentralgyrus,rightbasalforebrain,leftphgparahippocampalgyrus,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftofugoccipitalfusiformgyrus,leftinflatvent,leftlateralventricle,subjectageyears,rightcerebellumexterioragegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,rightaccumbensarea,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightlateralventricle,leftcerebellumwhitematter,rightmcggmiddlecingulategyrus,rightocpoccipitalpole,rightmfcmedialfrontalcortex,rightthalamusproper,leftofugoccipitalfusiformgyrus,leftsmcsupplementarymotorcortex,rightmfgmiddlefrontalgyrus,rightgregyrusrectus,rightstgsuperiortemporalgyrus,leftfugfusiformgyrusgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmcggmiddlecingulategyrus,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftpoparietaloperculum,rightcuncuneus,rightofugoccipitalfusiformgyrus,leftmfgmiddlefrontalgyrus,rightprgprecentralgyrus,rightmprgprecentralgyrusmedialsegment,rightamygdala,leftpallidum,leftcaudate,leftmfcmedialfrontalcortex,leftcocentraloperculum,rightstgsuperiortemporalgyrus,leftfrpfrontalpoleagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "+80y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmfgmiddlefrontalgyrus,rightmogmiddleoccipitalgyrus,leftententorhinalarea,rightphgparahippocampalgyrus,leftaorganteriororbitalgyrus,leftppplanumpolare,righttrifgtriangularpartoftheinferiorfrontalgyrus,rightpallidum,leftgregyrusrectus,leftcocentraloperculum,leftcalccalcarinecortex,leftainsanteriorinsula,rightmsfgsuperiorfrontalgyrusmedialsegment,rightgregyrusrectus,rightcerebellumexteriorparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmorgmedialorbitalgyrus,righthippocampus,rightlateralventricle,leftorifgorbitalpartoftheinferiorfrontalgyrus,leftputamen,_3rdventricle,righttmptemporalpole,rightcocentraloperculum,rightamygdala,leftpallidum,leftofugoccipitalfusiformgyrus,leftopifgopercularpartoftheinferiorfrontalgyrus,rightcaudate,leftcalccalcarinecortex,rightpinsposteriorinsulagender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,rightfofrontaloperculum,lefttmptemporalpole,leftsfgsuperiorfrontalgyrus,leftscasubcallosalarea,leftliglingualgyrus,rightlateralventricle,rightententorhinalarea,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftmfgmiddlefrontalgyrus,rightpcggposteriorcingulategyrus,leftsmcsupplementarymotorcortex,rightaorganteriororbitalgyrus,csfglobal,rightstgsuperiortemporalgyrusedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,rightsfgsuperiorfrontalgyrus,rightitginferiortemporalgyrus,leftioginferioroccipitalgyrus,rightmogmiddleoccipitalgyrus,_3rdventricle,leftaccumbensarea,rightppplanumpolare,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftpallidum,rightthalamusproper,leftcerebralwhitematter,leftpcggposteriorcingulategyrus,rightmtgmiddletemporalgyrus,rightmsfgsuperiorfrontalgyrusmedialsegment,cerebellarvermallobulesviiix,leftfrpfrontalpole,cerebellarvermallobulesiv,rightpcuprecuneus,rightcerebralwhitematterparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftporgposteriororbitalgyrus,rightententorhinalarea,cerebellarvermallobulesvivii,rightainsanteriorinsula,leftmtgmiddletemporalgyrus,leftorifgorbitalpartoftheinferiorfrontalgyrus,leftioginferioroccipitalgyrus,leftpoparietaloperculum,rightpoparietaloperculum,rightputamen,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftcerebralwhitematter,rightinflatvent,leftcalccalcarinecortex,leftlateralventricle,rightlorglateralorbitalgyrus,leftstgsuperiortemporalgyrus,leftamygdala,rightpcuprecuneus,leftfugfusiformgyrusparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,rightfofrontaloperculum,lefttmptemporalpole,leftacgganteriorcingulategyrus,leftsfgsuperiorfrontalgyrus,rightlateralventricle,leftfofrontaloperculum,rightainsanteriorinsula,rightitginferiortemporalgyrus,rightorifgorbitalpartoftheinferiorfrontalgyrus,rightpoparietaloperculum,rightventraldc,rightscasubcallosalarea,rightcocentraloperculum,leftaorganteriororbitalgyrus,leftbasalforebrain,rightpcggposteriorcingulategyrus,leftainsanteriorinsula,cerebellarvermallobulesviiix,leftamygdalaneurodegenerativescategories,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "neurodegenerativescategories", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "neurodegenerativescategories", "field": "neurodegenerativescategories", "operator": "equal", "value": "PD" }, { "id": "neurodegenerativescategories", "field": "neurodegenerativescategories", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,rightfofrontaloperculum,rightmpogpostcentralgyrusmedialsegment,leftocpoccipitalpole,leftpogpostcentralgyrus,rightententorhinalarea,rightsmgsupramarginalgyrus,leftmcggmiddlecingulategyrus,rightpogpostcentralgyrus,leftpinsposteriorinsula,rightacgganteriorcingulategyrus,leftaccumbensarea,rightphgparahippocampalgyrus,leftofugoccipitalfusiformgyrus,leftcaudate,rightmfgmiddlefrontalgyrus,rightaorganteriororbitalgyrus,leftsmgsupramarginalgyrus,leftstgsuperiortemporalgyrus,rightpcuprecuneusalzheimerbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "alzheimerbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "AD" }, { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,leftacgganteriorcingulategyrus,leftporgposteriororbitalgyrus,rightptplanumtemporale,leftmcggmiddlecingulategyrus,leftpinsposteriorinsula,rightpoparietaloperculum,rightacgganteriorcingulategyrus,leftmfgmiddlefrontalgyrus,rightmogmiddleoccipitalgyrus,righttmptemporalpole,rightscasubcallosalarea,rightfugfusiformgyrus,rightsplsuperiorparietallobule,leftaccumbensarea,leftmogmiddleoccipitalgyrus,leftopifgopercularpartoftheinferiorfrontalgyrus,leftcalccalcarinecortex,leftventraldc,leftsmgsupramarginalgyrusrs2718058_g,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs2718058_g", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "0" }, { "id": "rs2718058_g", "field": "rs2718058_g", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,rightfofrontaloperculum,leftpogpostcentralgyrus,leftfofrontaloperculum,rightmcggmiddlecingulategyrus,leftangangulargyrus,leftpoparietaloperculum,rightventraldc,leftputamen,righttmptemporalpole,rightscasubcallosalarea,rightputamen,rightmprgprecentralgyrusmedialsegment,rightamygdala,rightpallidum,minimentalstate,montrealcognitiveassessment,rightaorganteriororbitalgyrus,rightlorglateralorbitalgyrus,rightstgsuperiortemporalgyrusrs1476679_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs1476679_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "0" }, { "id": "rs1476679_c", "field": "rs1476679_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightmorgmedialorbitalgyrus,righthippocampus,rightententorhinalarea,leftthalamusproper,rightmcggmiddlecingulategyrus,leftangangulargyrus,leftpoparietaloperculum,rightcuncuneus,rightbasalforebrain,rightpcggposteriorcingulategyrus,rightmfcmedialfrontalcortex,rightamygdala,leftpallidum,leftmfcmedialfrontalcortex,leftcerebralwhitematter,rightlorglateralorbitalgyrus,leftsmgsupramarginalgyrus,rightcerebellumwhitematter,leftstgsuperiortemporalgyrus,leftmprgprecentralgyrusmedialsegmentparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftcerebellumexterior,rightaccumbensarea,leftporgposteriororbitalgyrus,rightententorhinalarea,rightorifgorbitalpartoftheinferiorfrontalgyrus,leftpoparietaloperculum,leftphgparahippocampalgyrus,brainstem,rightscasubcallosalarea,rightamygdala,leftsmcsupplementarymotorcortex,leftcalccalcarinecortex,rightlorglateralorbitalgyrus,rightstgsuperiortemporalgyrus,subjectageyears,leftmprgprecentralgyrusmedialsegment,cerebellarvermallobulesiv,rightpcuprecuneus,rightcerebellumexterior,rightcerebralwhitematteralzheimerbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "alzheimerbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "AD" }, { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,leftacgganteriorcingulategyrus,rightententorhinalarea,leftfofrontaloperculum,leftpinsposteriorinsula,rightorifgorbitalpartoftheinferiorfrontalgyrus,righttmptemporalpole,rightfugfusiformgyrus,leftmogmiddleoccipitalgyrus,rightputamen,leftlorglateralorbitalgyrus,leftaorganteriororbitalgyrus,leftofugoccipitalfusiformgyrus,leftcalccalcarinecortex,rightioginferioroccipitalgyrus,cerebellarvermallobulesviiix,leftventraldc,opticchiasm,leftfrpfrontalpole,rightpcuprecuneusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftprgprecentralgyrus,leftcerebellumexterior,leftporgposteriororbitalgyrus,rightptplanumtemporale,leftmcggmiddlecingulategyrus,leftangangulargyrus,rightitginferiortemporalgyrus,rightmogmiddleoccipitalgyrus,rightventraldc,brainstem,rightprgprecentralgyrus,rightscasubcallosalarea,rightsogsuperioroccipitalgyrus,rightliglingualgyrus,leftlorglateralorbitalgyrus,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftinflatvent,rightmsfgsuperiorfrontalgyrusmedialsegment,rightgregyrusrectus,cerebellarvermallobulesviiixppmicategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "ppmicategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "ppmicategory", "field": "ppmicategory", "operator": "equal", "value": "HC" }, { "id": "ppmicategory", "field": "ppmicategory", "operator": "equal", "value": "PRODROMA" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,rightfofrontaloperculum,lefttmptemporalpole,leftsfgsuperiorfrontalgyrus,rightttgtransversetemporalgyrus,rightsfgsuperiorfrontalgyrus,leftttgtransversetemporalgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,leftententorhinalarea,rightppplanumpolare,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftofugoccipitalfusiformgyrus,leftcaudate,leftopifgopercularpartoftheinferiorfrontalgyrus,subjectage,leftpcuprecuneus,rightaorganteriororbitalgyrus,leftlateralventricle,leftventraldc,rightporgposteriororbitalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "70-79y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "av45,leftcuncuneus,leftsfgsuperiorfrontalgyrus,rightmpogpostcentralgyrusmedialsegment,leftscasubcallosalarea,leftporgposteriororbitalgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightsmgsupramarginalgyrus,rightptplanumtemporale,lefthippocampus,rightofugoccipitalfusiformgyrus,leftententorhinalarea,rightfugfusiformgyrus,rightsplsuperiorparietallobule,leftcaudate,leftopifgopercularpartoftheinferiorfrontalgyrus,minimentalstate,rightcaudate,leftpcggposteriorcingulategyrus,leftmprgprecentralgyrusmedialsegmentrs3865444_t,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs3865444_t", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "0" }, { "id": "rs3865444_t", "field": "rs3865444_t", "operator": "equal", "value": "1" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "av45,lefttmptemporalpole,leftttgtransversetemporalgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightsmgsupramarginalgyrus,leftthalamusproper,leftmsfgsuperiorfrontalgyrusmedialsegment,rightcalccalcarinecortex,leftioginferioroccipitalgyrus,rightcuncuneus,rightacgganteriorcingulategyrus,leftputamen,rightprgprecentralgyrus,leftaccumbensarea,righttrifgtriangularpartoftheinferiorfrontalgyrus,minimentalstate,leftgregyrusrectus,rightaorganteriororbitalgyrus,leftamygdala,leftfugfusiformgyrusrs17125944_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs17125944_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "0" }, { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmorgmedialorbitalgyrus,leftcerebellumexterior,rightmorgmedialorbitalgyrus,rightaccumbensarea,leftscasubcallosalarea,leftttgtransversetemporalgyrus,rightententorhinalarea,rightmcggmiddlecingulategyrus,lefthippocampus,rightofugoccipitalfusiformgyrus,leftmfgmiddlefrontalgyrus,rightscasubcallosalarea,rightliglingualgyrus,leftaccumbensarea,subjectage,minimentalstate,leftcalccalcarinecortex,leftitginferiortemporalgyrus,subjectageyears,leftmprgprecentralgyrusmedialsegmentagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "-50y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,leftsfgsuperiorfrontalgyrus,rightsfgsuperiorfrontalgyrus,righthippocampus,leftfofrontaloperculum,leftmcggmiddlecingulategyrus,cerebellarvermallobulesvivii,rightainsanteriorinsula,leftangangulargyrus,rightocpoccipitalpole,rightventraldc,righttmptemporalpole,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftmfcmedialfrontalcortex,leftcocentraloperculum,leftsmgsupramarginalgyrus,rightstgsuperiortemporalgyrus,opticchiasm,leftmprgprecentralgyrusmedialsegment,rightcerebellumexterioredsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightaccumbensarea,leftsfgsuperiorfrontalgyrus,leftfofrontaloperculum,leftorifgorbitalpartoftheinferiorfrontalgyrus,rightocpoccipitalpole,leftputamen,brainstem,leftsogsuperioroccipitalgyrus,rightsogsuperioroccipitalgyrus,righttrifgtriangularpartoftheinferiorfrontalgyrus,leftofugoccipitalfusiformgyrus,leftcerebralwhitematter,leftsmcsupplementarymotorcortex,minimentalstate,leftpcuprecuneus,leftpcggposteriorcingulategyrus,leftcalccalcarinecortex,rightaorganteriororbitalgyrus,cerebellarvermallobulesviiix,rightstgsuperiortemporalgyrusagegroup,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "agegroup", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "50-59y" }, { "id": "agegroup", "field": "agegroup", "operator": "equal", "value": "60-69y" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftcuncuneus,leftocpoccipitalpole,rightententorhinalarea,leftcerebellumwhitematter,leftmtgmiddletemporalgyrus,leftpoparietaloperculum,rightventraldc,brainstem,rightprgprecentralgyrus,rightliglingualgyrus,rightphgparahippocampalgyrus,rightppplanumpolare,leftpallidum,leftofugoccipitalfusiformgyrus,leftopifgopercularpartoftheinferiorfrontalgyrus,rightmfgmiddlefrontalgyrus,leftitginferiortemporalgyrus,rightgregyrusrectus,subjectageyears,rightcerebellumexteriorgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "righthippocampus,rightsmcsupplementarymotorcortex,rightptplanumtemporale,leftfofrontaloperculum,leftmsfgsuperiorfrontalgyrusmedialsegment,leftorifgorbitalpartoftheinferiorfrontalgyrus,rightcalccalcarinecortex,rightitginferiortemporalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,rightfugfusiformgyrus,leftmogmiddleoccipitalgyrus,leftlorglateralorbitalgyrus,rightmprgprecentralgyrusmedialsegment,rightangangulargyrus,rightpallidum,rightcaudate,leftitginferiortemporalgyrus,rightgregyrusrectus,rightcerebellumwhitematter,rightporgposteriororbitalgyrusparkinsonbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "parkinsonbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "PD" }, { "id": "parkinsonbroadcategory", "field": "parkinsonbroadcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftprgprecentralgyrus,leftcerebellumexterior,leftacgganteriorcingulategyrus,leftocpoccipitalpole,lefttrifgtriangularpartoftheinferiorfrontalgyrus,rightententorhinalarea,rightptplanumtemporale,rightorifgorbitalpartoftheinferiorfrontalgyrus,rightacgganteriorcingulategyrus,leftmfgmiddlefrontalgyrus,leftententorhinalarea,leftbasalforebrain,rightthalamusproper,leftofugoccipitalfusiformgyrus,leftpcuprecuneus,leftcocentraloperculum,leftainsanteriorinsula,rightmsfgsuperiorfrontalgyrusmedialsegment,rightstgsuperiortemporalgyrus,cerebellarvermallobulesivgender,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "gender", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "gender", "field": "gender", "operator": "equal", "value": "M" }, { "id": "gender", "field": "gender", "operator": "equal", "value": "F" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "lefttmptemporalpole,rightententorhinalarea,leftthalamusproper,cerebellarvermallobulesvivii,rightainsanteriorinsula,lefthippocampus,rightcalccalcarinecortex,leftpoparietaloperculum,rightofugoccipitalfusiformgyrus,rightphgparahippocampalgyrus,leftaorganteriororbitalgyrus,leftofugoccipitalfusiformgyrus,leftmfcmedialfrontalcortex,leftgregyrusrectus,rightmfgmiddlefrontalgyrus,leftinflatvent,rightaorganteriororbitalgyrus,leftventraldc,rightlorglateralorbitalgyrus,leftfrpfrontalpoleedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,rightttgtransversetemporalgyrus,lefttrifgtriangularpartoftheinferiorfrontalgyrus,leftfofrontaloperculum,leftmsfgsuperiorfrontalgyrusmedialsegment,leftmtgmiddletemporalgyrus,rightitginferiortemporalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,leftmfgmiddlefrontalgyrus,rightmogmiddleoccipitalgyrus,rightfugfusiformgyrus,rightmprgprecentralgyrusmedialsegment,leftppplanumpolare,rightmfcmedialfrontalcortex,subjectage,rightcaudate,rightmsfgsuperiorfrontalgyrusmedialsegment,rightgregyrusrectus,leftmprgprecentralgyrusmedialsegment,rightporgposteriororbitalgyrusalzheimerbroadcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "alzheimerbroadcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "AD" }, { "id": "alzheimerbroadcategory", "field": "alzheimerbroadcategory", "operator": "equal", "value": "Other" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "rightfrpfrontalpole,rightmpogpostcentralgyrusmedialsegment,leftocpoccipitalpole,rightmcggmiddlecingulategyrus,leftmtgmiddletemporalgyrus,rightpogpostcentralgyrus,leftioginferioroccipitalgyrus,rightorifgorbitalpartoftheinferiorfrontalgyrus,rightopifgopercularpartoftheinferiorfrontalgyrus,rightofugoccipitalfusiformgyrus,rightventraldc,rightputamen,rightppplanumpolare,rightamygdala,leftopifgopercularpartoftheinferiorfrontalgyrus,subjectage,leftpcuprecuneus,leftsplsuperiorparietallobule,rightcaudate,cerebellarvermallobulesviiixedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftmorgmedialorbitalgyrus,rightsmcsupplementarymotorcortex,rightptplanumtemporale,rightainsanteriorinsula,leftioginferioroccipitalgyrus,rightmogmiddleoccipitalgyrus,leftsogsuperioroccipitalgyrus,rightscasubcallosalarea,leftaccumbensarea,rightphgparahippocampalgyrus,rightcocentraloperculum,rightpcggposteriorcingulategyrus,rightangangulargyrus,rightmfcmedialfrontalcortex,rightcaudate,leftpcggposteriorcingulategyrus,leftcalccalcarinecortex,montrealcognitiveassessment,leftsmgsupramarginalgyrus,leftmprgprecentralgyrusmedialsegmentrs17125944_c,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "rs17125944_c", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "0" }, { "id": "rs17125944_c", "field": "rs17125944_c", "operator": "equal", "value": "2" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftsfgsuperiorfrontalgyrus,leftscasubcallosalarea,leftporgposteriororbitalgyrus,leftfofrontaloperculum,leftmcggmiddlecingulategyrus,leftpoparietaloperculum,rightbasalforebrain,rightacgganteriorcingulategyrus,leftmfgmiddlefrontalgyrus,rightmogmiddleoccipitalgyrus,rightscasubcallosalarea,rightputamen,rightppplanumpolare,leftbasalforebrain,leftsplsuperiorparietallobule,leftcalccalcarinecortex,rightmtgmiddletemporalgyrus,leftventraldc,rightcerebellumwhitematter,leftfugfusiformgyrusedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "CN" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] },{ "input": [{ "name": "x", "label": "x", "desc": "A list of variables from database. The variable should be Real, Integer. It cannot be empty", "type": "column", "columnValuesSQLType": "real, integer", "columnValuesIsCategorical": "false", "value": "leftptplanumtemporale,leftporgposteriororbitalgyrus,rightptplanumtemporale,leftcerebellumwhitematter,rightainsanteriorinsula,leftmsfgsuperiorfrontalgyrusmedialsegment,leftmtgmiddletemporalgyrus,leftpinsposteriorinsula,rightitginferiortemporalgyrus,rightpoparietaloperculum,rightventraldc,rightprgprecentralgyrus,rightliglingualgyrus,rightputamen,leftmfcmedialfrontalcortex,leftcocentraloperculum,rightioginferioroccipitalgyrus,rightmsfgsuperiorfrontalgyrusmedialsegment,rightcerebellumexterior,rightpinsposteriorinsulaedsdcategory,", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "y", "label": "y", "desc": "A single variable from database. The variable should be Categorical with only two categories (i.e. Boolean). It cannot be empty.", "type": "column", "columnValuesSQLType": "text, integer", "columnValuesIsCategorical": "true", "value": "edsdcategory", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "pathology", "label": "pathology", "desc": "The name of the pathology that the dataset belongs to.", "type": "pathology", "value": "dementia", "valueNotBlank": true, "valueMultiple": false, "valueType": "string" }, { "name": "dataset", "label": "dataset", "desc": "It contains the names of one or more datasets, in which the algorithm will be executed. It cannot be empty", "type": "dataset", "value": "adni", "valueNotBlank": true, "valueMultiple": true, "valueType": "string" }, { "name": "filter", "label": "filter", "desc": "", "type": "filter", "value": { "condition": "OR", "rules": [ { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "AD" }, { "id": "edsdcategory", "field": "edsdcategory", "operator": "equal", "value": "MCI" } ], "valid": true }, "valueNotBlank": false, "valueMultiple": true, "valueType": "string" } ], "output": [{ "name": "params", "value": "{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'none', 'random_state': 0, 'solver': 'newton-cg', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}" }] }]}
